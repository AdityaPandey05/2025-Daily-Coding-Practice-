You are given a 0-indexed array of strings words and a 2D array of integers queries.

Each query queries[i] = [li, ri] asks us to find the number of strings present in the range li to ri (both inclusive) of words that start and end with a vowel.

Return an array ans of size queries.length, where ans[i] is the answer to the ith query.

Note that the vowel letters are 'a', 'e', 'i', 'o', and 'u'.

 

Example 1:

Input: words = ["aba","bcb","ece","aa","e"], queries = [[0,2],[1,4],[1,1]]
Output: [2,3,0]
Explanation: The strings starting and ending with a vowel are "aba", "ece", "aa" and "e".
The answer to the query [0,2] is 2 (strings "aba" and "ece").
to query [1,4] is 3 (strings "ece", "aa", "e").
to query [1,1] is 0.
We return [2,3,0].


Example 2:

Input: words = ["a","e","i"], queries = [[0,2],[0,1],[2,2]]
Output: [3,2,1]
Explanation: Every string satisfies the conditions, so we return [3,2,1].
 

Constraints:

1 <= words.length <= 105
1 <= words[i].length <= 40
words[i] consists only of lowercase English letters.
sum(words[i].length) <= 3 * 105
1 <= queries.length <= 105
0 <= li <= ri < words.length


Solutions:---------------------------------------------------------------------------


class Solution:
    def vowelStrings(self, words: List[str], queries: List[List[int]]) -> List[int]:
        n = len(words)
        Prefix = [0] * (n + 1)
        vowels = {'a', 'e', 'i', 'o', 'u'}

        for i in range(n):
            Prefix[i + 1] = Prefix[i]
            if words[i][0] in vowels and words[i][-1] in vowels:
                Prefix[i + 1] += 1

        ANS = []
        for query in queries:
            ANS.append(Prefix[query[1] + 1] - Prefix[query[0]])

        return ANS







# Let's consider an example:

# words = ["aba","bcb","ece","aa","e"]

# queries = [[0,2],[1,4],[1,1]]

# Initialization:

# n = 5
# Prefix = [0, 0, 0, 0, 0, 0]
# vowels = {'a', 'e', 'i', 'o', 'u'}


# Building the Prefix Sum Array:

# i = 0, words[0] = "aba": words[0][0] = 'a' and words[0][-1] = 'a' are vowels. Prefix[1] = Prefix[0] + 1 = 1. Prefix becomes [0, 1, 0, 0, 0, 0]
# i = 1, words[1] = "bcb": words[1][0] = 'b' is not a vowel. Prefix[2] = Prefix[1] = 1. Prefix becomes [0, 1, 1, 0, 0, 0]
# i = 2, words[2] = "ece": words[2][0] = 'e' and words[2][-1] = 'e' are vowels. Prefix[3] = Prefix[2] + 1 = 2. Prefix becomes [0, 1, 1, 2, 0, 0]
# i = 3, words[3] = "aa": words[3][0] = 'a' and words[3][-1] = 'a' are vowels. Prefix[4] = Prefix[3] + 1 = 3. Prefix becomes [0, 1, 1, 2, 3, 0]
# i = 4, words[4] = "e": words[4][0] = 'e' and words[4][-1] = 'e' are vowels. Prefix[5] = Prefix[4] + 1 = 4. Prefix becomes [0, 1, 1, 2, 3, 4]
# Processing Queries:

# query = [0, 2]: ANS.append(Prefix[2 + 1] - Prefix[0]) = Prefix[3] - Prefix[0] = 2 - 0 = 2
# query = [1, 4]: ANS.append(Prefix[4 + 1] - Prefix[1]) = Prefix[5] - Prefix[1] = 4 - 1 = 3
# query = [1, 1]: ANS.append(Prefix[1 + 1] - Prefix[1]) = Prefix[2] - Prefix[1] = 1 - 1 = 0
# Return: ANS = [2, 3, 0]

# Therefore, the function returns [2, 3, 0]. This means:

# There are 2 vowel strings in the range [0, 2] (inclusive).
# There are 3 vowel strings in the range [1, 4] (inclusive).
# There are 0 vowel strings in the range [1, 1] (inclusive).